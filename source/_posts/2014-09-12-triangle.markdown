---
layout: post
title: "Triangle"
date: 2014-09-12 17:40:54 +0800
comments: true
categories: leetcode DP
---
>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.

>For example, given the following triangle  
>
		[
		     [2],       
		    [3,4],  
		   [6,5,7],  
		  [4,1,8,3]  
		]	

>The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).

>Note:  
Bonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.  
<!--more-->

```c++ 

class Solution {
public:
    int minimumTotal(vector<vector<int> > &triangle) {
        int n = triangle.size();
        vector<int> minNums = triangle[n-1];
        
        for (int i = n - 2; i >= 0; i--)
        {
            for(int j = 0; j <= i; j++)
            {
                minNums[j] = min(minNums[j], minNums[j+1]) + triangle[i][j];
            }
        }
        
        return minNums[0];
    }
};
```